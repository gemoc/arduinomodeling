AutomataConstraintLibrary Arduino{
	import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as kernel;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as ccsl;

	RelationLibrary newRelationLib1 {

		AutomataRelationDefinition ChannelFsm [ ChannelDecl ] {

			variables {
				Integer capacity=0
				Integer size=0
				Integer un=1
				Integer deux = 2
				Integer inRate=0
				Integer outRate=0
			 }

			init:  S1

			from S1 to S2 : S1ToS2
			-> ( 
				do size = ChannelSDF_currentSize.value
				do capacity = ChannelSDF_capacity.value
				do inRate = ChannelSDF_inRate.value
				do outRate = ChannelSDF_outRate.value
				)

			from S2 to S2 : S2ToS2
			-> ( 
				when ChannelSDF_pop if( size >= inRate ) do size = ( size - inRate )
			)

			from S2 to S2 : S2ToS22
			-> ( 
				when ChannelSDF_push if( (size + outRate ) <= capacity ) do size = ( size + outRate )
			)

			State S1 ( out : S1ToS2 )

			State S2 ( in : S1ToS2, S2ToS2, S2ToS22 out : S2ToS2, S2ToS22 )
		}

		AutomataRelationDefinition ThreadFSM [ ThreadDecl ] {
			
			variables {
				Integer currentCycle=0
				Integer nbCycle=0
				Integer unVal=1
			 }

			init:  TFSM_S1

			from TFSM_S4 to TFSM_S2 : TFSM_S1ToTFSM_S2
			-> ( when Thread_start )

			from TFSM_S1 to TFSM_S4 : TFSM_S1ToTFSM_S4
			-> (	do nbCycle = Thread_nbCycle.value )

			from TFSM_S2 to TFSM_S5 : TFSM_S2ToTFSM_S5
			-> ( when Thread_currentInstruction if( currentCycle <= nbCycle ) do currentCycle = ( currentCycle + unVal ))

			from TFSM_S5 to TFSM_S2 : TFSM_S5ToTFSM_S2
			-> ( when Thread_nextInstruction )

			from TFSM_S4 to TFSM_S5 : TFSM_S4ToTFSM_S5
			-> ( when Thread_start, Thread_currentInstruction )

			from TFSM_S2 to TFSM_S2 : TFSM_S2ToTFSM_S2
			-> ( when Thread_nextInstruction )

			State TFSM_S1 ( out : TFSM_S1ToTFSM_S4 )

			State TFSM_S2 ( in : TFSM_S1ToTFSM_S2, TFSM_S5ToTFSM_S2, TFSM_S2ToTFSM_S2 out : TFSM_S2ToTFSM_S5, TFSM_S2ToTFSM_S2 )

			State TFSM_S4 ( in : TFSM_S1ToTFSM_S4 out : TFSM_S1ToTFSM_S2,
			TFSM_S4ToTFSM_S5 )

			State TFSM_S5 ( in : TFSM_S2ToTFSM_S5, TFSM_S4ToTFSM_S5 out : TFSM_S5ToTFSM_S2 )
		}
		RelationDeclaration ChannelDecl ( ChannelSDF_push : clock, ChannelSDF_pop :
		clock, ChannelSDF_capacity : int, ChannelSDF_inRate : int, ChannelSDF_outRate
		: int, ChannelSDF_currentSize : int )
		RelationDeclaration ThreadDecl ( Thread_currentInstruction : clock, Thread_nextInstruction :
		clock, Thread_start : clock, Thread_nbCycle : int )
	}
}